plugins {
    id "java-library"
    id "com.gtnewhorizons.retrofuturagradle" version "1.3.26"
}

// Set the toolchain version to decouple the Java we run Gradle with from the Java used to compile and run the mod
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
        // Azul covers the most platforms for Java 8 toolchains, crucially including MacOS arm64
        vendor.set(org.gradle.jvm.toolchain.JvmVendorSpec.AZUL)
    }
}

minecraft {
    mcVersion.set(minecraft_version)
    username.set("Developer")

    injectedTags.put("MOD_VERSION", mod_version)
    injectedTags.put("MOD_NAME", "Sodium-Vintage")
}

tasks.injectTags.outputClassName.set("${mod_base_package}.Tags")

tasks.deobfuscateMergedJarToSrg.configure {accessTransformerFiles.from("src/main/resources/META-INF/sodium_at.cfg")}

repositories {
    maven {	url "https://maven.cleanroommc.com" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    annotationProcessor "org.ow2.asm:asm-debug-all:5.2"
    annotationProcessor "com.google.guava:guava:32.1.2-jre"
    annotationProcessor "com.google.code.gson:gson:2.8.9"

    def mixinBooter = modUtils.enableMixins("zone.rong:mixinbooter:8.9", "sodium.mixins.refmap.json")
    api (mixinBooter) {
        transitive = false
    }
    annotationProcessor (mixinBooter) {
        transitive = false
    }

    implementation rfg.deobf("curse.maven:ae2-223794:2747063")
}

jar {
    manifest {
        attributes (
                "FMLCorePluginContainsFMLMod": true,
                "ForceLoadAsMod": true,
                "FMLAT": "sodium_at.cfg",
                "MixinConfigs": "sodium.mixins.json",
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        )
    }
}

processResources {
    from "common/src/main/resources"
}